# Default values for stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env: dev

stacks:
  back:
    name: org-oucala-back
    suffix: back
    image:
      provider: docker.io
      organization: deepnox
      name: org-oucala-back
      tag: 0.0.1
      imagePullPolicy: Always
      command: ["/opt/entrypoint.bash"]
      args: ["npm", "run", "start"]
      ports:
        containerPort: 8080
      env:
        - name: DATABASE_URL
          value: mongodb://org-oucala-db:27017/oucala
    metadata:
      labels:
        env: dev
    spec:
      replicas: 1

  front:
    suffix: app
    image:
      provider: docker.io
      organization: deepnox
      name: org-oucala-app
      tag: 0.0.1
      imagePullPolicy: Always
      command:
      - /opt/entrypoint.bash
      args:
      - npm
      - run
      - start
    metadata:
      labels:
        env: dev
    spec:
      replicas: 1

database:
  settings:
    type: mongo
  image:
    env:
      secrets: mongo-creds
    volumeMounts:
  volumes:
    - ...
